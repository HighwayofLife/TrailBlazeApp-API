version: '3.8'

services:
  db:
    image: postgres:15
    container_name: trailblaze_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=trailblaze
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trailblaze_api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/trailblaze
      - DOCKER_ENV=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trailblaze_scraper
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/trailblaze
      - DOCKER_ENV=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: python scrapers/run_scrapers.py aerc_calendar

  manage:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trailblaze_manage
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/trailblaze
      - DOCKER_ENV=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: tail -f /dev/null  # Keep container running
      
volumes:
  postgres_data:
