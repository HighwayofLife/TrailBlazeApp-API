openapi: 3.0.3
info:
  title: TrailBlaze Authentication API
  description: API for user authentication and authorization
  version: 1.0.0
servers:
  - url: https://api.trailblaze.app/v1/auth
paths:
  /login:
    post:
      summary: User login
      description: Authenticates a user and returns an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  expiresIn:
                    type: integer
                    description: Token expiration time in seconds
                  user:
                    $ref: '#/components/schemas/UserBasic'
        '401':
          description: Invalid credentials
        '422':
          description: Validation error
  /register:
    post:
      summary: User registration
      description: Registers a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                firstName:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/UserBasic'
        '409':
          description: Account already exists
        '422':
          description: Validation error
  /refresh:
    post:
      summary: Refresh access token
      description: Use refresh token to get a new access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expiresIn:
                    type: integer
        '401':
          description: Invalid refresh token
  /logout:
    post:
      summary: User logout
      description: Invalidate the current access token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully logged out
        '401':
          description: Unauthorized
  /password/forgot:
    post:
      summary: Forgot password
      description: Request a password reset email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Password reset link sent if email exists
  /password/reset:
    post:
      summary: Reset password
      description: Reset password using token from email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password successfully reset
        '400':
          description: Invalid token
        '422':
          description: Validation error
components:
  schemas:
    UserBasic:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profileImageUrl:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer